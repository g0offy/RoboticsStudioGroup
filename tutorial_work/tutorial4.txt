You can choose any world in Gazebo you like to demonstrate these state estimation problems using Turtlebot3.

It can be a simple House, Office, Shopping area, Health Care setup etc. Depending on your choice you have to change the world file in the Gazebo simulator.

Dead Reckoning

Write a node to move the robot from one location to another. The node should receive linear speed, angular speed, distance and  a variable to 
indicate the direction of movement (forward or backward). It should publish the cmd_vel topic to move the robot. 

Add Gaussian white noise with zero mean to odometry readings to mimic uncertainty of odometry values (example: wheel slipping). Use the dead reckoning method 
to estimate the current location of the robot and compare it with the ground truth.

Visualise the motion of the robot using rviz.

 

Kalman Filtering

Set up the robot_localization ROS 2 package on TurtleBot3 robot. Use the robot_localization package to fuse odometry data 
from the /wheel/odometry topic with IMU data from the /imu/data topic to provide locally accurate, smooth odometry estimates. 
Display the smoothed odometry using rqt_plot.